name: Build

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

env:
  RELEASE: ${{ github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'main' }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release: ${{fromJson(env.RELEASE) && fromJson(steps.finalize.outputs.released)}}
      reference: ${{toJson(steps.finalize.outputs.tag)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Draft a release
        id: release
        if: ${{ fromJson(env.RELEASE) }}
        run: python ./.flow/flow.py github release

      - name: Follow up
        id: finalize
        env:
          RELEASED: ${{steps.release.outputs.released}}
          TAG: ${{steps.release.outputs.tag}}
        run: |
          echo "released=${RELEASED:=false}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

  M:
    name: Select builds
    runs-on: ubuntu-latest
    needs: release
    env:
      RELEASE: ${{needs.release.outputs.release}}
      REFERENCE: ${{needs.release.outputs.reference}}
    outputs:
      release: ${{fromJson(env.RELEASE)}}
      reference: ${{fromJson(env.REFERENCE)}}
      matrix: ${{steps.flow.outputs.matrix}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{fromJson(env.REFERENCE)}}

      - name: Find builds
        id: flow
        run: python ./.flow/flow.py github matrix

      - name: Print-a-lot
        run: |
          echo ${{toJson(fromJson(env.RELEASE))}}
          echo ${{toJson(fromJson(env.REFERENCE))}}
